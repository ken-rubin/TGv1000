Either of us



Ken

- Navbar menu highlight problem.
- Get ScrollRegion tooltip to position better. It now works EXCEPT when the scroll region is in a dialog. And who knows what it will do when vertical?
- Finish Coder
- Integrate Coder


Jerry

- Finish Save Project (as opposed to Save As).
- Hungarian notation- m_setXxx -> m_functionSetXxx
- Consider adding paging to (all?) search results; like 100 at a time. See code below.
- Regarding duplicate project name within userId: I can see a scenario where a user goes into the save as dialog, changes the name to one already used (which does update the project in memory on the blur event), 
-    backs out (which doesn't reset the project's name back) and then uses straight Save with this duplicate name. This must be prohibited.
-    I think that the blur handlers in Save As need to update the project only if Save Project is called. Otherwise, they set member variables. That will handle this.
- Add logitems table in preparation for logging (like for forgotten password). Means adminzone needs some fleshing out.
- I show the current project in the upper tab, but not its image. And I'm not sure I clear it if a project is closed, etc. So tighten this up. The thing with the image is that it has to be an icon to
-    show it in the browser tab--and it has to be fetched from the server like favicon (which it replaces) is--so we're unable to customize it for multiple users.
- Start saving methods, properties and events to their own tables.

- Smaller Type image in TW--or make it responsively better. When resolution is 100%, the 3 vertical icons next to the image are pushed to the next row. That's no good.

- Test that Types are saved correctly to DB and then test Search for Type.
- Use function to check if type name is available--where? Write similar functions for methods, properties and events in active type
- On exit or close project or new project, if project is dirty, ask if they want to save/save as. Note: new items will have id=0; items added through searching should have id>0 if they belong to the user; otherwise, possibly -1 to indcate that this is someone else's. Do we need to keep
-    the original creator's user id? Probably a good idea.
- After creating a new project scroll the window down so TW is at the top.
- #TWRenameTypeLink has to be hooked up and programmed.
- Fix image positioning in ScrollRegion like I fixed it in ScrollRegionV. Most likely some hard-coded height, not the algorithm.
- Fix Navbar. It shouldn't appear until I scroll near the top. Now it appears even if I scroll just a little from the bottom of the page.
- New project is not clearing Designer.
- New project dialog: image, if loaded, can overwrite the three links next to it. Also, change those links to icons, but still fix image sizing.
- If a project is closed, empty toolstrip, designer and comicstrip. I started in Client.js, but some cascading structure is already in place. Use that.
- When a Type is added, is gets selected into TypeWell, but toolstrip doesn't scroll to show it. It should.



To discuss

- If someone buys a project/type/method, we want them to be able to modify/extend it. What's to keep their friend from copying it for free?
- When should I check that something is deletable? For example, for delete Type, why go to the dialog if deletion is going to be blocked because the Type is in the designer? What other entities does this apply to?






Just saving this here for possible ScrollRegion paging:

2. Try using a Deferred Join

This is an interesting trick. Suppose you have pages of customers. Each page displays ten customers. The query will use LIMIT to get ten records, and OFFSET to skip all the previous page results. When you get to the 100th page, it's doing LIMIT 10 OFFSET 990. So the server has to go and read all those records, then discard them.

Also: AirBNB didn't have to fail during an AWS outage.

[code]
SELECT id, name, address, phone FROM customers ORDER BY name LIMIT 10 OFFSET 990;
[/code]

MySQL is first scanning an index then retrieving rows in the table by primary key id. So it's doing double lookups and so forth. Turns out you can make this faster with a tricky thing called a deferred join.

The inside piece just uses the primary key. An explain plan shows us "using index" which we love!

[code]
SELECT id
FROM customers
ORDER BY name
LIMIT 10 OFFSET 990;
[/code]

Now combine this using an INNER JOIN to get the ten rows and data you want:

[code]
SELECT id, name, address, phone
FROM customers
INNER JOIN (
SELECT id
FROM customers
ORDER BY name
LIMIT 10 OFFSET 990)
AS my_results USING(id);
[/code]


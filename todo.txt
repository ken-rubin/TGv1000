Either of us



Ken

- Finish Coder
- Integrate Coder
- I've screwed something up: when you drop a tool on the designer it draws it offset upwards by the distance down the toolstrip it was at.
- Related to the one above??? Check comment in Designer.js#m_functionDrop and fix/remove/whatever.
- CLick on the app Type's initialize method. All the Types are listed on the left-hand side of the code window. Make them like Control; i.e., [arrowhead] Types that opens on a click to reveal all the Types or no [arrowhead] and just display them all as Blockly blocks. 
     Will this be needed with Properties, Events?
- Is the Dependencies array still needed in Type? In Type.js#self.load you have a comment: // process properties methods events and dependencies collections but no code to do so. At least not there.
- Did dialogs always go screen-wide? If not, let's try and prevent. Must be a row-fluid thing.



Jerry

- Catch up on loading and saving project to DB.
- Hungarian notation- m_setXxx -> m_functionSetXxx
- Consider adding paging to (all?) search results; like 100 at a time. See code below.
- Regarding duplicate project name within userId: I can see a scenario where a user goes into the save as dialog, changes the name to one already used (which does update the project in memory on the blur event), 
-    backs out (which doesn't reset the project's name back) and then uses straight Save with this duplicate name. This must be prohibited.
-    I think that the blur handlers in Save As need to update the project only if Save Project is called. Otherwise, they set member variables. That will handle this.
- Add logitems table in preparation for logging (like for forgotten password). Means adminzone needs some fleshing out.
- I show the current project in the upper tab. I'm not sure I clear it if a project is closed, etc. So tighten this up.
- Start saving methods, properties and events to their own tables.
- Use function (that exists) to validate that new type name is available. Write similar functions for methods, properties and events in active type.
- On exit or close project or new project, if project is dirty, ask if they want to save/save as. Note: new items will have id=0; items added through searching should have id>0 if they belong to the user; otherwise, possibly -1 to indcate that this is someone else's. Do we need to keep
-    the original creator's user id? Probably a good idea.
- #TWRenameTypeLink has to be hooked up and programmed.
- New project is not clearing Designer or comic strip. And more?
- If a project is closed, empty toolstrip, designer and comicstrip. I started in Client.js, but some cascading structure is already in place. Use that.
- When should I check that something is deletable? For example, for delete Type, why go to the dialog if deletion is going to be blocked because the Type is in the designer? What other entities does this apply to?
- Is there a (minor) size issue with the comic images in comicstrip? The image could be scaled too tall for its slider.
- When I delete Type, Method, Property or Event, should I change ordinals in memory or when writing to DB? I think the latter.
- See Client.js#self.addMethodToActiveType. I need to scroll the grid to the bottom.


To discuss

- If someone buys a project/type/method, we want them to be able to modify/extend it. What's to keep their friend from copying it for free?
- After creating a new project, should we scroll the window down so TypeWell fills the window? Another option would be to scroll down if a tool is clicked (actually mouse-downed), but not dragged.





Just saving this here for possible ScrollRegion paging:

2. Try using a Deferred Join

This is an interesting trick. Suppose you have pages of customers. Each page displays ten customers. The query will use LIMIT to get ten records, and OFFSET to skip all the previous page results. When you get to the 100th page, it's doing LIMIT 10 OFFSET 990. So the server has to go and read all those records, then discard them.

Also: AirBNB didn't have to fail during an AWS outage.

[code]
SELECT id, name, address, phone FROM customers ORDER BY name LIMIT 10 OFFSET 990;
[/code]

MySQL is first scanning an index then retrieving rows in the table by primary key id. So it's doing double lookups and so forth. Turns out you can make this faster with a tricky thing called a deferred join.

The inside piece just uses the primary key. An explain plan shows us "using index" which we love!

[code]
SELECT id
FROM customers
ORDER BY name
LIMIT 10 OFFSET 990;
[/code]

Now combine this using an INNER JOIN to get the ten rows and data you want:

[code]
SELECT id, name, address, phone
FROM customers
INNER JOIN (
SELECT id
FROM customers
ORDER BY name
LIMIT 10 OFFSET 990)
AS my_results USING(id);
[/code]


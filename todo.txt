Either of us



Ken

- Finish Coder
- Integrate Coder
- CLick on the app Type's initialize method. All the Types are listed on the left-hand side of the code window. Make them like Control; i.e., [arrowhead] Types that opens on a click to reveal all the Types or no [arrowhead] and just display them all as Blockly blocks. 
     Will this be needed with Properties, Events?



Jerry

- Consider adding paging to search results; like 100 at a time. See code sample below.
- Regarding duplicate project name within userId: I can see a scenario where a user goes into the save as dialog, changes the name to one already used (which does update the project in memory on the blur event), 
-    backs out (which doesn't reset the project's name back) and then uses straight Save with this duplicate name. This must be prohibited.
-    I think that the blur handlers in Save As need to update the project only if Save Project is called. Otherwise, they set member variables. That will handle this.
- Add logitems table in preparation for logging (like for forgotten password). Means adminzone needs some fleshing out.
- I show the current project in the upper tab. I'm not sure I clear it if a project is closed, etc. So tighten this up.
- On exit or close project or new project, if project is dirty, ask if they want to save/save as. Note: new items will have id=0; items added through searching should have id>0 if they belong to the user; otherwise, possibly -1 to indcate that this is someone else's. Do we need to keep
-    the original creator's user id? Probably a good idea.
- New project is not clearing Designer.
- Close project is not clearing Designer or comicpanels strip.
- If a project is closed, empty toolstrip, designer and comicstrip. I started in Client.js, but some cascading structure is already in place. Use that.
- Is there a (minor) size issue with the comic images in comicstrip? The image could be scaled too tall for its slider.
- Need to finish delete Property, Method and Event. They don't call code to clean up Blockly. This is in Types.js.
- Images in toolstrip now have spaces in id replaced by _. Might have to catch this elsewhere.
- Before saving picklist initialvalue, uniquify.
- Write event loader in Code.js#self.addType.
- When I "select ... order by ordinal asc", items might come back in random order anyway. Check this. If so, sort.



To discuss

- If someone buys a project/type/method, we want them to be able to modify/extend it. What's to keep their friend from copying it for free?We can keep them from retrieving a project that had a price, since it points back to a classOrProduct with a price.
- What does one search for when looking for a class, product or other project to open? classOrProject or project? There will initially be a 1-1 correspondance between classOrProduct and project, but, as people start using a classOrProduct,
-    they'll save clone projects that will still point back to the same classOrProduct, so that relationship will become 1-many. Someone "buying" a product will want to search classOrProduct. Someone cloning a project should be able to search at that level.
-    I think this could be handled with checkboxes in the Open/Search for Project dialog. It does imply that classOrProduct does have a resource pointing back to it and tags associated with that resource. There is currently a resourceType for "comic". I'm going to
-    change that to classOrProduct.
- Should new Types (add new Type) be created with 'initialize' method? Ken thinks so.
- Should I prevent dragging of the App tool onto the designer? Easy to do by just adding mousedown handler, not draggable, if name is 'tool-app'.





Just saving this here for possible ScrollRegion paging:

2. Try using a Deferred Join

This is an interesting trick. Suppose you have pages of customers. Each page displays ten customers. The query will use LIMIT to get ten records, and OFFSET to skip all the previous page results. When you get to the 100th page, it's doing LIMIT 10 OFFSET 990. So the server has to go and read all those records, then discard them.

Also: AirBNB didn't have to fail during an AWS outage.

[code]
SELECT id, name, address, phone FROM customers ORDER BY name LIMIT 10 OFFSET 990;
[/code]

MySQL is first scanning an index then retrieving rows in the table by primary key id. So it's doing double lookups and so forth. Turns out you can make this faster with a tricky thing called a deferred join.

The inside piece just uses the primary key. An explain plan shows us "using index" which we love!

[code]
SELECT id
FROM customers
ORDER BY name
LIMIT 10 OFFSET 990;
[/code]

Now combine this using an INNER JOIN to get the ten rows and data you want:

[code]
SELECT id, name, address, phone
FROM customers
INNER JOIN (
SELECT id
FROM customers
ORDER BY name
LIMIT 10 OFFSET 990)
AS my_results USING(id);
[/code]

